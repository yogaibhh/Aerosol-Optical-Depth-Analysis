# -*- coding: utf-8 -*-
"""AOD Variasi

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fy2XCQro1VRsQPrJwNImaJg4oeDg2L3L
"""

# Install pandas
!pip install pandas

# Install matplotlib
!pip install matplotlib

import pandas as pd

# Load the Excel file to see the structure and content
file_path = '/content/drive/MyDrive/AOD-CH/aeronet_combined_2020_2021_2022.xlsx'
data = pd.read_excel(file_path)
data.head()

import matplotlib.pyplot as plt

# Filter the data for the years 2020 and 2021
data['Year'] = data['Date'].dt.year
data_filtered = data[(data['Year'] == 2020) | (data['Year'] == 2021)]

# Plotting
plt.figure(figsize=(12, 6))
plt.plot(data_filtered['Date'], data_filtered['AOD_500nm'], label='AOD at 500 nm', color='blue')
plt.title('Variation of AOD at 500 nm (2020-2021)')
plt.xlabel('Date')
plt.ylabel('AOD 500 nm')
plt.grid(True)
plt.legend()
plt.show()

# Group data by month and count non-null AOD values per month
data_filtered['Month'] = data_filtered['Date'].dt.to_period('M')

# Count total entries per month and non-null AOD entries
monthly_data_count = data_filtered.groupby('Month').agg(Total_Days=('Date', 'count'))

# Calculate the number of days in each month period (accounting for leap years)
monthly_data_count['Days_in_Month'] = monthly_data_count.index.to_timestamp().daysinmonth

# Determine the months with missing data more than 50%
monthly_data_count['Lots_of_Missing_Data'] = monthly_data_count['Total_Days'] < (monthly_data_count['Days_in_Month'] * 0.5)
monthly_data_count.reset_index(inplace=True)

# Merge this information back to the main data frame
data_merged = pd.merge(data_filtered, monthly_data_count[['Month', 'Lots_of_Missing_Data']], on='Month')
data_merged.head()

# Plotting with color condition
plt.figure(figsize=(12, 6))
for key, grp in data_merged.groupby('Lots_of_Missing_Data'):
    if key:  # If lots of missing data, plot in red
        plt.plot(grp['Date'], grp['AOD_500nm'], label='Data Tidak Lengkap', color='red')
    else:  # Otherwise, plot in blue
        plt.plot(grp['Date'], grp['AOD_500nm'], label='Data Lengkap', color='blue')

plt.xlabel('Tanggal')
plt.ylabel('AOD 500 nm')
plt.legend()
plt.show()